#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#

#
# Copyright (c) 2019, Joyent, Inc.
#

#
# Makefile.node_modules.defs: Makefile for using NPM modules.
#

#
# NOTE: This makefile comes from the "eng" repo. If you find yourself changing
# this file, you should ensure that you test all consumers of it, since
# eng.git is a git submodule of several repositories. After testing, push
# changes to the eng.git repository as normal, then do the following for
# each component that uses eng.git, likely reusing the original ticket subject
# for the commit message as was used for the eng.git push.
#
#    $ git submodule update --remote deps/eng
#    $ git add deps/eng
#    $ git commit -m "TOOLS-xxxx some description" deps/eng
#
# Then create a PR as usual for review.
#

#
# This Makefile provides a target for building NPM modules from the dependency
# information in the "package.json" file.  The "npm install" operation is
# expensive and produces a complex (multi-file) result which is difficult for
# make to use in dependency analysis.  As such, we use a "stamp" file to track
# successful completion of module installation.
#
# This variable allows the consumer to influence the environment used to run
# NPM commands.
#
#	NPM_ENV			This string should be set to a list of
#				environment variables in the syntax used
#				by bash; e.g.,
#
#					NPM_ENV =	TESTING=yes V=1
#
# Consumers should, for targets which depend on the installation of NPM
# modules, depend on the stamp file using the $(STAMP_NODE_MODULES) variable,
# e.g.:
#
#	.PHONY: all
#	all: $(STAMP_NODE_MODULES)
#
# A phony target, "make stamp-node-modules", is also provided to allow the
# engineer to manually perform NPM module installation without invoking other
# targets.  Note that this target should _not_ be used as a dependency for
# other targets in consuming Makefiles; using phony targets to represent
# intermediate build stages can inhibit the ability of make to determine
# when no additional actions are required.
#

TOP ?= $(error You must include Makefile.defs before this makefile)
NPM ?= $(error You must include either Makefile.node.defs or \
    Makefile.node_prebuilt.defs before this makefile)

BUILD ?=		build

#
# Invoking "npm install" at the top-level will create a "node_modules"
# directory into which NPM modules will be installed.
#
CLEAN_FILES +=		node_modules

#
# To avoid repeatedly reinstalling from NPM, we create a "stamp" file to track
# successful runs of "npm install".  Note that MAKE_STAMPS_DIR is included
# in CLEAN_FILES already.
#
STAMP_NODE_MODULES ?=	$(MAKE_STAMPS_DIR)/node-modules
